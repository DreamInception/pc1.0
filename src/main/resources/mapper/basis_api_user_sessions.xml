<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="basis_api_user_sessions">

	<sql id="Example_Where_Select" >
		<where>
		1=1  <if test="id != null and '' != id" > AND api_user_sessions.id = #{id}</if> <if test="createdDt != null and '' != createdDt" > AND api_user_sessions.created_dt = #{createdDt}</if> <if test="lastModified_dt != null and '' != lastModified_dt" > AND api_user_sessions.last_modified_dt = #{lastModified_dt}</if> <if test="userAccess_token != null and '' != userAccess_token" > AND api_user_sessions.user_access_token = #{userAccess_token}</if> <if test="userRefresh_token != null and '' != userRefresh_token" > AND api_user_sessions.user_refresh_token = #{userRefresh_token}</if> <if test="lastRefreshed_dt != null and '' != lastRefreshed_dt" > AND api_user_sessions.last_refreshed_dt = #{lastRefreshed_dt}</if> <if test="refreshToken_granted_dt != null and '' != refreshToken_granted_dt" > AND api_user_sessions.refresh_token_granted_dt = #{refreshToken_granted_dt}</if> <if test="refreshedCt != null and '' != refreshedCt" > AND api_user_sessions.refreshed_ct = #{refreshedCt}</if> <if test="userId != null and '' != userId" > AND api_user_sessions.user_id = #{userId}</if> <if test="data != null and '' != data" > AND api_user_sessions.data = #{data}</if>
	     </where>
	</sql>

	
	<sql id="Example_Where_Delete" >
		<where>
		1=1  <if test="id != null and '' != id" > AND id = #{id}</if> <if test="createdDt != null and '' != createdDt" > AND created_dt = #{createdDt}</if> <if test="lastModified_dt != null and '' != lastModified_dt" > AND last_modified_dt = #{lastModified_dt}</if> <if test="userAccess_token != null and '' != userAccess_token" > AND user_access_token = #{userAccess_token}</if> <if test="userRefresh_token != null and '' != userRefresh_token" > AND user_refresh_token = #{userRefresh_token}</if> <if test="lastRefreshed_dt != null and '' != lastRefreshed_dt" > AND last_refreshed_dt = #{lastRefreshed_dt}</if> <if test="refreshToken_granted_dt != null and '' != refreshToken_granted_dt" > AND refresh_token_granted_dt = #{refreshToken_granted_dt}</if> <if test="refreshedCt != null and '' != refreshedCt" > AND refreshed_ct = #{refreshedCt}</if> <if test="userId != null and '' != userId" > AND user_id = #{userId}</if> <if test="data != null and '' != data" > AND data = #{data}</if>
		</where>
	</sql>

	<select id="count" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT count(1) AS count FROM v2_api_user_sessions AS api_user_sessions
		<include refid="Example_Where_Select" />
	</select>
	
	<select id="findbyid" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		 SELECT api_user_sessions.id as id, api_user_sessions.created_dt as createdDt, api_user_sessions.last_modified_dt as lastModified_dt, api_user_sessions.user_access_token as userAccess_token, api_user_sessions.user_refresh_token as userRefresh_token, api_user_sessions.last_refreshed_dt as lastRefreshed_dt, api_user_sessions.refresh_token_granted_dt as refreshToken_granted_dt, api_user_sessions.refreshed_ct as refreshedCt, api_user_sessions.user_id as userId, api_user_sessions.data as data FROM v2_api_user_sessions AS api_user_sessions WHERE id = #{id}
	</select>
	
	<select id="findAllList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	     SELECT api_user_sessions.id as id, api_user_sessions.created_dt as createdDt, api_user_sessions.last_modified_dt as lastModified_dt, api_user_sessions.user_access_token as userAccess_token, api_user_sessions.user_refresh_token as userRefresh_token, api_user_sessions.last_refreshed_dt as lastRefreshed_dt, api_user_sessions.refresh_token_granted_dt as refreshToken_granted_dt, api_user_sessions.refreshed_ct as refreshedCt, api_user_sessions.user_id as userId, api_user_sessions.data as data FROM v2_api_user_sessions AS api_user_sessions
		 <include refid="Example_Where_Select" />
		 <if test="orderby != null and '' != orderby">
			${orderby}
		 </if>
	</select>
	
	<select id="findPageList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT api_user_sessions.id as id, api_user_sessions.created_dt as createdDt, api_user_sessions.last_modified_dt as lastModified_dt, api_user_sessions.user_access_token as userAccess_token, api_user_sessions.user_refresh_token as userRefresh_token, api_user_sessions.last_refreshed_dt as lastRefreshed_dt, api_user_sessions.refresh_token_granted_dt as refreshToken_granted_dt, api_user_sessions.refreshed_ct as refreshedCt, api_user_sessions.user_id as userId, api_user_sessions.data as data FROM v2_api_user_sessions AS api_user_sessions  
		<include refid="Example_Where_Select" />
		<if test="orderby != null and '' != orderby">
			${orderby}
		</if>
	    LIMIT #{start},#{end}
	</select>
	
	<insert id="save" parameterType="java.util.HashMap">
		INSERT INTO v2_api_user_sessions 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if><if test="createdDt != null">created_dt,</if><if test="lastModified_dt != null">last_modified_dt,</if><if test="userAccess_token != null">user_access_token,</if><if test="userRefresh_token != null">user_refresh_token,</if><if test="lastRefreshed_dt != null">last_refreshed_dt,</if><if test="refreshToken_granted_dt != null">refresh_token_granted_dt,</if><if test="refreshedCt != null">refreshed_ct,</if><if test="userId != null">user_id,</if><if test="data != null">data,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
     		<if test="id != null">#{id},</if><if test="createdDt != null">#{createdDt},</if><if test="lastModified_dt != null">#{lastModified_dt},</if><if test="userAccess_token != null">#{userAccess_token},</if><if test="userRefresh_token != null">#{userRefresh_token},</if><if test="lastRefreshed_dt != null">#{lastRefreshed_dt},</if><if test="refreshToken_granted_dt != null">#{refreshToken_granted_dt},</if><if test="refreshedCt != null">#{refreshedCt},</if><if test="userId != null">#{userId},</if><if test="data != null">#{data},</if>
		</trim>
	</insert>
	
	<insert id="saveAll" parameterType="java.util.List">
		INSERT INTO v2_api_user_sessions (id,created_dt,last_modified_dt,user_access_token,user_refresh_token,last_refreshed_dt,refresh_token_granted_dt,refreshed_ct,user_id,data)
	    VALUES 
	    <foreach collection="list" item="item" separator=",">
	   	  (#{item.id},#{item.createdDt},#{item.lastModified_dt},#{item.userAccess_token},#{item.userRefresh_token},#{item.lastRefreshed_dt},#{item.refreshToken_granted_dt},#{item.refreshedCt},#{item.userId},#{item.data})
	    </foreach>
	</insert>
	
	
	<update id="update" parameterType="java.util.HashMap">
		 UPDATE v2_api_user_sessions
    <set>
     <if test="id != null" >  id = #{id}, </if><if test="createdDt != null" >  created_dt = #{createdDt}, </if><if test="lastModified_dt != null" >  last_modified_dt = #{lastModified_dt}, </if><if test="userAccess_token != null" >  user_access_token = #{userAccess_token}, </if><if test="userRefresh_token != null" >  user_refresh_token = #{userRefresh_token}, </if><if test="lastRefreshed_dt != null" >  last_refreshed_dt = #{lastRefreshed_dt}, </if><if test="refreshToken_granted_dt != null" >  refresh_token_granted_dt = #{refreshToken_granted_dt}, </if><if test="refreshedCt != null" >  refreshed_ct = #{refreshedCt}, </if><if test="userId != null" >  user_id = #{userId}, </if><if test="data != null" >  data = #{data}, </if>
      </set>
	  WHERE id = #{id}
	</update>
	
	
	<delete id="delete" parameterType="java.util.HashMap">
		DELETE FROM v2_api_user_sessions 
		<include refid="Example_Where_Delete" />
	</delete>
	
	<delete id="deleteAll" parameterType="java.util.List">
		DELETE FROM v2_api_user_sessions 
		WHERE id IN
		<foreach collection="list" item="id" separator="," open="(" close=")">
			#{id}
		</foreach>
	</delete>
</mapper>