<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="basis_baggers">

	<sql id="Example_Where_Select" >
		<where>
		1=1  <if test="userId != null and '' != userId" > AND baggers.user_id = #{userId}</if> <if test="assetId != null and '' != assetId" > AND baggers.asset_id = #{assetId}</if> <if test="productId != null and '' != productId" > AND baggers.product_id = #{productId}</if> <if test="bagId != null and '' != bagId" > AND baggers.bag_id = #{bagId}</if> <if test="extraData != null and '' != extraData" > AND baggers.extra_data = #{extraData}</if> <if test="createdDt != null and '' != createdDt" > AND baggers.created_dt = #{createdDt}</if> <if test="lastModified_dt != null and '' != lastModified_dt" > AND baggers.last_modified_dt = #{lastModified_dt}</if>
	     </where>
	</sql>

	
	<sql id="Example_Where_Delete" >
		<where>
		1=1  <if test="userId != null and '' != userId" > AND user_id = #{userId}</if> <if test="assetId != null and '' != assetId" > AND asset_id = #{assetId}</if> <if test="productId != null and '' != productId" > AND product_id = #{productId}</if> <if test="bagId != null and '' != bagId" > AND bag_id = #{bagId}</if> <if test="extraData != null and '' != extraData" > AND extra_data = #{extraData}</if> <if test="createdDt != null and '' != createdDt" > AND created_dt = #{createdDt}</if> <if test="lastModified_dt != null and '' != lastModified_dt" > AND last_modified_dt = #{lastModified_dt}</if>
		</where>
	</sql>

	<select id="count" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT count(1) AS count FROM v2_baggers AS baggers
		<include refid="Example_Where_Select" />
	</select>
	
	<select id="findbyid" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		 SELECT baggers.user_id as userId, baggers.asset_id as assetId, baggers.product_id as productId, baggers.bag_id as bagId, baggers.extra_data as extraData, baggers.created_dt as createdDt, baggers.last_modified_dt as lastModified_dt FROM v2_baggers AS baggers WHERE user_id = #{userId}
	</select>
	
	<select id="findAllList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	     SELECT baggers.user_id as userId, baggers.asset_id as assetId, baggers.product_id as productId, baggers.bag_id as bagId, baggers.extra_data as extraData, baggers.created_dt as createdDt, baggers.last_modified_dt as lastModified_dt FROM v2_baggers AS baggers
		 <include refid="Example_Where_Select" />
		 <if test="orderby != null and '' != orderby">
			${orderby}
		 </if>
	</select>
	
	<select id="findPageList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT baggers.user_id as userId, baggers.asset_id as assetId, baggers.product_id as productId, baggers.bag_id as bagId, baggers.extra_data as extraData, baggers.created_dt as createdDt, baggers.last_modified_dt as lastModified_dt FROM v2_baggers AS baggers  
		<include refid="Example_Where_Select" />
		<if test="orderby != null and '' != orderby">
			${orderby}
		</if>
	    LIMIT #{start},#{end}
	</select>
	
	<insert id="save" parameterType="java.util.HashMap">
		INSERT INTO v2_baggers 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">user_id,</if><if test="assetId != null">asset_id,</if><if test="productId != null">product_id,</if><if test="bagId != null">bag_id,</if><if test="extraData != null">extra_data,</if><if test="createdDt != null">created_dt,</if><if test="lastModified_dt != null">last_modified_dt,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
     		<if test="userId != null">#{userId},</if><if test="assetId != null">#{assetId},</if><if test="productId != null">#{productId},</if><if test="bagId != null">#{bagId},</if><if test="extraData != null">#{extraData},</if><if test="createdDt != null">#{createdDt},</if><if test="lastModified_dt != null">#{lastModified_dt},</if>
		</trim>
	</insert>
	
	<insert id="saveAll" parameterType="java.util.List">
		INSERT INTO v2_baggers (user_id,asset_id,product_id,bag_id,extra_data,created_dt,last_modified_dt)
	    VALUES 
	    <foreach collection="list" item="item" separator=",">
	   	  (#{item.userId},#{item.assetId},#{item.productId},#{item.bagId},#{item.extraData},#{item.createdDt},#{item.lastModified_dt})
	    </foreach>
	</insert>
	
	
	<update id="update" parameterType="java.util.HashMap">
		 UPDATE v2_baggers
    <set>
     <if test="userId != null" >  user_id = #{userId}, </if><if test="assetId != null" >  asset_id = #{assetId}, </if><if test="productId != null" >  product_id = #{productId}, </if><if test="bagId != null" >  bag_id = #{bagId}, </if><if test="extraData != null" >  extra_data = #{extraData}, </if><if test="createdDt != null" >  created_dt = #{createdDt}, </if><if test="lastModified_dt != null" >  last_modified_dt = #{lastModified_dt}, </if>
      </set>
	  WHERE user_id = #{userId}
	</update>
	
	
	<delete id="delete" parameterType="java.util.HashMap">
		DELETE FROM v2_baggers 
		<include refid="Example_Where_Delete" />
	</delete>
	
	<delete id="deleteAll" parameterType="java.util.List">
		DELETE FROM v2_baggers 
		WHERE user_id IN
		<foreach collection="list" item="id" separator="," open="(" close=")">
			#{id}
		</foreach>
	</delete>
</mapper>