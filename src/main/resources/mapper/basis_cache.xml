<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="basis_cache">

	<sql id="Example_Where_Select" >
		<where>
		1=1  <if test="cachekey != null and '' != cachekey" > AND cache.cachekey = #{cachekey}</if> <if test="expire != null and '' != expire" > AND cache.expire = #{expire}</if> <if test="data != null and '' != data" > AND cache.data = #{data}</if> <if test="datacrc != null and '' != datacrc" > AND cache.datacrc = #{datacrc}</if>
	     </where>
	</sql>

	
	<sql id="Example_Where_Delete" >
		<where>
		1=1  <if test="cachekey != null and '' != cachekey" > AND cachekey = #{cachekey}</if> <if test="expire != null and '' != expire" > AND expire = #{expire}</if> <if test="data != null and '' != data" > AND data = #{data}</if> <if test="datacrc != null and '' != datacrc" > AND datacrc = #{datacrc}</if>
		</where>
	</sql>

	<select id="count" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT count(1) AS count FROM dr_cache AS cache
		<include refid="Example_Where_Select" />
	</select>
	
	<select id="findbyid" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		 SELECT cache.cachekey as cachekey, cache.expire as expire, cache.data as data, cache.datacrc as datacrc FROM dr_cache AS cache WHERE cachekey = #{cachekey}
	</select>
	
	<select id="findAllList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	     SELECT cache.cachekey as cachekey, cache.expire as expire, cache.data as data, cache.datacrc as datacrc FROM dr_cache AS cache
		 <include refid="Example_Where_Select" />
		 <if test="orderby != null and '' != orderby">
			${orderby}
		 </if>
	</select>
	
	<select id="findPageList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT cache.cachekey as cachekey, cache.expire as expire, cache.data as data, cache.datacrc as datacrc FROM dr_cache AS cache  
		<include refid="Example_Where_Select" />
		<if test="orderby != null and '' != orderby">
			${orderby}
		</if>
	    LIMIT #{start},#{end}
	</select>
	
	<insert id="save" parameterType="java.util.HashMap">
		INSERT INTO dr_cache 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="cachekey != null">cachekey,</if><if test="expire != null">expire,</if><if test="data != null">data,</if><if test="datacrc != null">datacrc,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
     		<if test="cachekey != null">#{cachekey},</if><if test="expire != null">#{expire},</if><if test="data != null">#{data},</if><if test="datacrc != null">#{datacrc},</if>
		</trim>
	</insert>
	
	<insert id="saveAll" parameterType="java.util.List">
		INSERT INTO dr_cache (cachekey,expire,data,datacrc)
	    VALUES 
	    <foreach collection="list" item="item" separator=",">
	   	  (#{item.cachekey},#{item.expire},#{item.data},#{item.datacrc})
	    </foreach>
	</insert>
	
	
	<update id="update" parameterType="java.util.HashMap">
		 UPDATE dr_cache
    <set>
     <if test="cachekey != null" >  cachekey = #{cachekey}, </if><if test="expire != null" >  expire = #{expire}, </if><if test="data != null" >  data = #{data}, </if><if test="datacrc != null" >  datacrc = #{datacrc}, </if>
      </set>
	  WHERE cachekey = #{cachekey}
	</update>
	
	
	<delete id="delete" parameterType="java.util.HashMap">
		DELETE FROM dr_cache 
		<include refid="Example_Where_Delete" />
	</delete>
	
	<delete id="deleteAll" parameterType="java.util.List">
		DELETE FROM dr_cache 
		WHERE cachekey IN
		<foreach collection="list" item="id" separator="," open="(" close=")">
			#{id}
		</foreach>
	</delete>
</mapper>