<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="basis_member">

	<sql id="Example_Where_Select" >
		<where>
		1=1  <if test="uid != null and '' != uid" > AND member.uid = #{uid}</if> <if test="nickname != null and '' != nickname" > AND member.nickname = #{nickname}</if> <if test="sex != null and '' != sex" > AND member.sex = #{sex}</if> <if test="birthday != null and '' != birthday" > AND member.birthday = #{birthday}</if> <if test="qq != null and '' != qq" > AND member.qq = #{qq}</if> <if test="score != null and '' != score" > AND member.score = #{score}</if> <if test="login != null and '' != login" > AND member.login = #{login}</if> <if test="regIp != null and '' != regIp" > AND member.reg_ip = #{regIp}</if> <if test="regTime != null and '' != regTime" > AND member.reg_time = #{regTime}</if> <if test="lastLogin_ip != null and '' != lastLogin_ip" > AND member.last_login_ip = #{lastLogin_ip}</if> <if test="lastLogin_time != null and '' != lastLogin_time" > AND member.last_login_time = #{lastLogin_time}</if> <if test="mobile != null and '' != mobile" > AND member.mobile = #{mobile}</if> <if test="email != null and '' != email" > AND member.email = #{email}</if> <if test="status != null and '' != status" > AND member.status = #{status}</if>
	     </where>
	</sql>

	
	<sql id="Example_Where_Delete" >
		<where>
		1=1  <if test="uid != null and '' != uid" > AND uid = #{uid}</if> <if test="nickname != null and '' != nickname" > AND nickname = #{nickname}</if> <if test="sex != null and '' != sex" > AND sex = #{sex}</if> <if test="birthday != null and '' != birthday" > AND birthday = #{birthday}</if> <if test="qq != null and '' != qq" > AND qq = #{qq}</if> <if test="score != null and '' != score" > AND score = #{score}</if> <if test="login != null and '' != login" > AND login = #{login}</if> <if test="regIp != null and '' != regIp" > AND reg_ip = #{regIp}</if> <if test="regTime != null and '' != regTime" > AND reg_time = #{regTime}</if> <if test="lastLogin_ip != null and '' != lastLogin_ip" > AND last_login_ip = #{lastLogin_ip}</if> <if test="lastLogin_time != null and '' != lastLogin_time" > AND last_login_time = #{lastLogin_time}</if> <if test="mobile != null and '' != mobile" > AND mobile = #{mobile}</if> <if test="email != null and '' != email" > AND email = #{email}</if> <if test="status != null and '' != status" > AND status = #{status}</if>
		</where>
	</sql>

	<select id="count" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT count(1) AS count FROM dr_member AS member
		<include refid="Example_Where_Select" />
	</select>
	
	<select id="findbyid" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		 SELECT member.uid as uid, member.nickname as nickname, member.sex as sex, member.birthday as birthday, member.qq as qq, member.score as score, member.login as login, member.reg_ip as regIp, member.reg_time as regTime, member.last_login_ip as lastLogin_ip, member.last_login_time as lastLogin_time, member.mobile as mobile, member.email as email, member.status as status FROM dr_member AS member WHERE uid = #{uid}
	</select>
	
	<select id="findAllList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	     SELECT member.uid as uid, member.nickname as nickname, member.sex as sex, member.birthday as birthday, member.qq as qq, member.score as score, member.login as login, member.reg_ip as regIp, member.reg_time as regTime, member.last_login_ip as lastLogin_ip, member.last_login_time as lastLogin_time, member.mobile as mobile, member.email as email, member.status as status FROM dr_member AS member
		 <include refid="Example_Where_Select" />
		 <if test="orderby != null and '' != orderby">
			${orderby}
		 </if>
	</select>
	
	<select id="findPageList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT member.uid as uid, member.nickname as nickname, member.sex as sex, member.birthday as birthday, member.qq as qq, member.score as score, member.login as login, member.reg_ip as regIp, member.reg_time as regTime, member.last_login_ip as lastLogin_ip, member.last_login_time as lastLogin_time, member.mobile as mobile, member.email as email, member.status as status FROM dr_member AS member  
		<include refid="Example_Where_Select" />
		<if test="orderby != null and '' != orderby">
			${orderby}
		</if>
	    LIMIT #{start},#{end}
	</select>
	
	<insert id="save" parameterType="java.util.HashMap">
		INSERT INTO dr_member 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid != null">uid,</if><if test="nickname != null">nickname,</if><if test="sex != null">sex,</if><if test="birthday != null">birthday,</if><if test="qq != null">qq,</if><if test="score != null">score,</if><if test="login != null">login,</if><if test="regIp != null">reg_ip,</if><if test="regTime != null">reg_time,</if><if test="lastLogin_ip != null">last_login_ip,</if><if test="lastLogin_time != null">last_login_time,</if><if test="mobile != null">mobile,</if><if test="email != null">email,</if><if test="status != null">status,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
     		<if test="uid != null">#{uid},</if><if test="nickname != null">#{nickname},</if><if test="sex != null">#{sex},</if><if test="birthday != null">#{birthday},</if><if test="qq != null">#{qq},</if><if test="score != null">#{score},</if><if test="login != null">#{login},</if><if test="regIp != null">#{regIp},</if><if test="regTime != null">#{regTime},</if><if test="lastLogin_ip != null">#{lastLogin_ip},</if><if test="lastLogin_time != null">#{lastLogin_time},</if><if test="mobile != null">#{mobile},</if><if test="email != null">#{email},</if><if test="status != null">#{status},</if>
		</trim>
	</insert>
	
	<insert id="saveAll" parameterType="java.util.List">
		INSERT INTO dr_member (uid,nickname,sex,birthday,qq,score,login,reg_ip,reg_time,last_login_ip,last_login_time,mobile,email,status)
	    VALUES 
	    <foreach collection="list" item="item" separator=",">
	   	  (#{item.uid},#{item.nickname},#{item.sex},#{item.birthday},#{item.qq},#{item.score},#{item.login},#{item.regIp},#{item.regTime},#{item.lastLogin_ip},#{item.lastLogin_time},#{item.mobile},#{item.email},#{item.status})
	    </foreach>
	</insert>
	
	
	<update id="update" parameterType="java.util.HashMap">
		 UPDATE dr_member
    <set>
     <if test="uid != null" >  uid = #{uid}, </if><if test="nickname != null" >  nickname = #{nickname}, </if><if test="sex != null" >  sex = #{sex}, </if><if test="birthday != null" >  birthday = #{birthday}, </if><if test="qq != null" >  qq = #{qq}, </if><if test="score != null" >  score = #{score}, </if><if test="login != null" >  login = #{login}, </if><if test="regIp != null" >  reg_ip = #{regIp}, </if><if test="regTime != null" >  reg_time = #{regTime}, </if><if test="lastLogin_ip != null" >  last_login_ip = #{lastLogin_ip}, </if><if test="lastLogin_time != null" >  last_login_time = #{lastLogin_time}, </if><if test="mobile != null" >  mobile = #{mobile}, </if><if test="email != null" >  email = #{email}, </if><if test="status != null" >  status = #{status}, </if>
      </set>
	  WHERE uid = #{uid}
	</update>
	
	
	<delete id="delete" parameterType="java.util.HashMap">
		DELETE FROM dr_member 
		<include refid="Example_Where_Delete" />
	</delete>
	
	<delete id="deleteAll" parameterType="java.util.List">
		DELETE FROM dr_member 
		WHERE uid IN
		<foreach collection="list" item="id" separator="," open="(" close=")">
			#{id}
		</foreach>
	</delete>
</mapper>