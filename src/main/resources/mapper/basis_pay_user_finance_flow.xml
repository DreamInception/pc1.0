<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="basis_pay_user_finance_flow">

	<sql id="Example_Where_Select" >
		<where>
		1=1  <if test="id != null and '' != id" > AND pay_user_finance_flow.id = #{id}</if> <if test="userId != null and '' != userId" > AND pay_user_finance_flow.user_id = #{userId}</if> <if test="channelId != null and '' != channelId" > AND pay_user_finance_flow.channel_id = #{channelId}</if> <if test="transId != null and '' != transId" > AND pay_user_finance_flow.trans_id = #{transId}</if> <if test="type != null and '' != type" > AND pay_user_finance_flow.type = #{type}</if> <if test="amount != null and '' != amount" > AND pay_user_finance_flow.amount = #{amount}</if> <if test="descs != null and '' != descs" > AND pay_user_finance_flow.descs = #{descs}</if> <if test="state != null and '' != state" > AND pay_user_finance_flow.state = #{state}</if> <if test="createDt != null and '' != createDt" > AND pay_user_finance_flow.create_dt = #{createDt}</if>
	     </where>
	</sql>

	
	<sql id="Example_Where_Delete" >
		<where>
		1=1  <if test="id != null and '' != id" > AND id = #{id}</if> <if test="userId != null and '' != userId" > AND user_id = #{userId}</if> <if test="channelId != null and '' != channelId" > AND channel_id = #{channelId}</if> <if test="transId != null and '' != transId" > AND trans_id = #{transId}</if> <if test="type != null and '' != type" > AND type = #{type}</if> <if test="amount != null and '' != amount" > AND amount = #{amount}</if> <if test="descs != null and '' != descs" > AND descs = #{descs}</if> <if test="state != null and '' != state" > AND state = #{state}</if> <if test="createDt != null and '' != createDt" > AND create_dt = #{createDt}</if>
		</where>
	</sql>

	<select id="count" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT count(1) AS count FROM dr_pay_user_finance_flow AS pay_user_finance_flow
		<include refid="Example_Where_Select" />
	</select>
	
	<select id="findbyid" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		 SELECT pay_user_finance_flow.id as id, pay_user_finance_flow.user_id as userId, pay_user_finance_flow.channel_id as channelId, pay_user_finance_flow.trans_id as transId, pay_user_finance_flow.type as type, pay_user_finance_flow.amount as amount, pay_user_finance_flow.descs as descs, pay_user_finance_flow.state as state, pay_user_finance_flow.create_dt as createDt FROM dr_pay_user_finance_flow AS pay_user_finance_flow WHERE id = #{id}
	</select>
	
	<select id="findAllList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	     SELECT pay_user_finance_flow.id as id, pay_user_finance_flow.user_id as userId, pay_user_finance_flow.channel_id as channelId, pay_user_finance_flow.trans_id as transId, pay_user_finance_flow.type as type, pay_user_finance_flow.amount as amount, pay_user_finance_flow.descs as descs, pay_user_finance_flow.state as state, pay_user_finance_flow.create_dt as createDt FROM dr_pay_user_finance_flow AS pay_user_finance_flow
		 <include refid="Example_Where_Select" />
		 <if test="orderby != null and '' != orderby">
			${orderby}
		 </if>
	</select>
	
	<select id="findPageList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT pay_user_finance_flow.id as id, pay_user_finance_flow.user_id as userId, pay_user_finance_flow.channel_id as channelId, pay_user_finance_flow.trans_id as transId, pay_user_finance_flow.type as type, pay_user_finance_flow.amount as amount, pay_user_finance_flow.descs as descs, pay_user_finance_flow.state as state, pay_user_finance_flow.create_dt as createDt FROM dr_pay_user_finance_flow AS pay_user_finance_flow  
		<include refid="Example_Where_Select" />
		<if test="orderby != null and '' != orderby">
			${orderby}
		</if>
	    LIMIT #{start},#{end}
	</select>
	
	<insert id="save" parameterType="java.util.HashMap">
		INSERT INTO dr_pay_user_finance_flow 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if><if test="userId != null">user_id,</if><if test="channelId != null">channel_id,</if><if test="transId != null">trans_id,</if><if test="type != null">type,</if><if test="amount != null">amount,</if><if test="descs != null">descs,</if><if test="state != null">state,</if><if test="createDt != null">create_dt,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
     		<if test="id != null">#{id},</if><if test="userId != null">#{userId},</if><if test="channelId != null">#{channelId},</if><if test="transId != null">#{transId},</if><if test="type != null">#{type},</if><if test="amount != null">#{amount},</if><if test="descs != null">#{descs},</if><if test="state != null">#{state},</if><if test="createDt != null">#{createDt},</if>
		</trim>
	</insert>
	
	<insert id="saveAll" parameterType="java.util.List">
		INSERT INTO dr_pay_user_finance_flow (id,user_id,channel_id,trans_id,type,amount,descs,state,create_dt)
	    VALUES 
	    <foreach collection="list" item="item" separator=",">
	   	  (#{item.id},#{item.userId},#{item.channelId},#{item.transId},#{item.type},#{item.amount},#{item.descs},#{item.state},#{item.createDt})
	    </foreach>
	</insert>
	
	
	<update id="update" parameterType="java.util.HashMap">
		 UPDATE dr_pay_user_finance_flow
    <set>
     <if test="id != null" >  id = #{id}, </if><if test="userId != null" >  user_id = #{userId}, </if><if test="channelId != null" >  channel_id = #{channelId}, </if><if test="transId != null" >  trans_id = #{transId}, </if><if test="type != null" >  type = #{type}, </if><if test="amount != null" >  amount = #{amount}, </if><if test="descs != null" >  descs = #{descs}, </if><if test="state != null" >  state = #{state}, </if><if test="createDt != null" >  create_dt = #{createDt}, </if>
      </set>
	  WHERE id = #{id}
	</update>
	
	
	<delete id="delete" parameterType="java.util.HashMap">
		DELETE FROM dr_pay_user_finance_flow 
		<include refid="Example_Where_Delete" />
	</delete>
	
	<delete id="deleteAll" parameterType="java.util.List">
		DELETE FROM dr_pay_user_finance_flow 
		WHERE id IN
		<foreach collection="list" item="id" separator="," open="(" close=")">
			#{id}
		</foreach>
	</delete>
</mapper>