<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="basis_pay_user_withdraw">

	<sql id="Example_Where_Select" >
		<where>
		1=1  <if test="id != null and '' != id" > AND pay_user_withdraw.id = #{id}</if> <if test="userId != null and '' != userId" > AND pay_user_withdraw.user_id = #{userId}</if> <if test="channelId != null and '' != channelId" > AND pay_user_withdraw.channel_id = #{channelId}</if> <if test="batchId != null and '' != batchId" > AND pay_user_withdraw.batch_id = #{batchId}</if> <if test="transNo != null and '' != transNo" > AND pay_user_withdraw.trans_no = #{transNo}</if> <if test="transAmt != null and '' != transAmt" > AND pay_user_withdraw.trans_amt = #{transAmt}</if> <if test="state != null and '' != state" > AND pay_user_withdraw.state = #{state}</if> <if test="returnCode != null and '' != returnCode" > AND pay_user_withdraw.return_code = #{returnCode}</if> <if test="returnMsg != null and '' != returnMsg" > AND pay_user_withdraw.return_msg = #{returnMsg}</if> <if test="createDt != null and '' != createDt" > AND pay_user_withdraw.create_dt = #{createDt}</if> <if test="modifiedTs != null and '' != modifiedTs" > AND pay_user_withdraw.modified_ts = #{modifiedTs}</if>
	     </where>
	</sql>

	
	<sql id="Example_Where_Delete" >
		<where>
		1=1  <if test="id != null and '' != id" > AND id = #{id}</if> <if test="userId != null and '' != userId" > AND user_id = #{userId}</if> <if test="channelId != null and '' != channelId" > AND channel_id = #{channelId}</if> <if test="batchId != null and '' != batchId" > AND batch_id = #{batchId}</if> <if test="transNo != null and '' != transNo" > AND trans_no = #{transNo}</if> <if test="transAmt != null and '' != transAmt" > AND trans_amt = #{transAmt}</if> <if test="state != null and '' != state" > AND state = #{state}</if> <if test="returnCode != null and '' != returnCode" > AND return_code = #{returnCode}</if> <if test="returnMsg != null and '' != returnMsg" > AND return_msg = #{returnMsg}</if> <if test="createDt != null and '' != createDt" > AND create_dt = #{createDt}</if> <if test="modifiedTs != null and '' != modifiedTs" > AND modified_ts = #{modifiedTs}</if>
		</where>
	</sql>

	<select id="count" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT count(1) AS count FROM dr_pay_user_withdraw AS pay_user_withdraw
		<include refid="Example_Where_Select" />
	</select>
	
	<select id="findbyid" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		 SELECT pay_user_withdraw.id as id, pay_user_withdraw.user_id as userId, pay_user_withdraw.channel_id as channelId, pay_user_withdraw.batch_id as batchId, pay_user_withdraw.trans_no as transNo, pay_user_withdraw.trans_amt as transAmt, pay_user_withdraw.state as state, pay_user_withdraw.return_code as returnCode, pay_user_withdraw.return_msg as returnMsg, pay_user_withdraw.create_dt as createDt, pay_user_withdraw.modified_ts as modifiedTs FROM dr_pay_user_withdraw AS pay_user_withdraw WHERE id = #{id}
	</select>
	
	<select id="findAllList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	     SELECT pay_user_withdraw.id as id, pay_user_withdraw.user_id as userId, pay_user_withdraw.channel_id as channelId, pay_user_withdraw.batch_id as batchId, pay_user_withdraw.trans_no as transNo, pay_user_withdraw.trans_amt as transAmt, pay_user_withdraw.state as state, pay_user_withdraw.return_code as returnCode, pay_user_withdraw.return_msg as returnMsg, pay_user_withdraw.create_dt as createDt, pay_user_withdraw.modified_ts as modifiedTs FROM dr_pay_user_withdraw AS pay_user_withdraw
		 <include refid="Example_Where_Select" />
		 <if test="orderby != null and '' != orderby">
			${orderby}
		 </if>
	</select>
	
	<select id="findPageList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT pay_user_withdraw.id as id, pay_user_withdraw.user_id as userId, pay_user_withdraw.channel_id as channelId, pay_user_withdraw.batch_id as batchId, pay_user_withdraw.trans_no as transNo, pay_user_withdraw.trans_amt as transAmt, pay_user_withdraw.state as state, pay_user_withdraw.return_code as returnCode, pay_user_withdraw.return_msg as returnMsg, pay_user_withdraw.create_dt as createDt, pay_user_withdraw.modified_ts as modifiedTs FROM dr_pay_user_withdraw AS pay_user_withdraw  
		<include refid="Example_Where_Select" />
		<if test="orderby != null and '' != orderby">
			${orderby}
		</if>
	    LIMIT #{start},#{end}
	</select>
	
	<insert id="save" parameterType="java.util.HashMap">
		INSERT INTO dr_pay_user_withdraw 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if><if test="userId != null">user_id,</if><if test="channelId != null">channel_id,</if><if test="batchId != null">batch_id,</if><if test="transNo != null">trans_no,</if><if test="transAmt != null">trans_amt,</if><if test="state != null">state,</if><if test="returnCode != null">return_code,</if><if test="returnMsg != null">return_msg,</if><if test="createDt != null">create_dt,</if><if test="modifiedTs != null">modified_ts,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
     		<if test="id != null">#{id},</if><if test="userId != null">#{userId},</if><if test="channelId != null">#{channelId},</if><if test="batchId != null">#{batchId},</if><if test="transNo != null">#{transNo},</if><if test="transAmt != null">#{transAmt},</if><if test="state != null">#{state},</if><if test="returnCode != null">#{returnCode},</if><if test="returnMsg != null">#{returnMsg},</if><if test="createDt != null">#{createDt},</if><if test="modifiedTs != null">#{modifiedTs},</if>
		</trim>
	</insert>
	
	<insert id="saveAll" parameterType="java.util.List">
		INSERT INTO dr_pay_user_withdraw (id,user_id,channel_id,batch_id,trans_no,trans_amt,state,return_code,return_msg,create_dt,modified_ts)
	    VALUES 
	    <foreach collection="list" item="item" separator=",">
	   	  (#{item.id},#{item.userId},#{item.channelId},#{item.batchId},#{item.transNo},#{item.transAmt},#{item.state},#{item.returnCode},#{item.returnMsg},#{item.createDt},#{item.modifiedTs})
	    </foreach>
	</insert>
	
	
	<update id="update" parameterType="java.util.HashMap">
		 UPDATE dr_pay_user_withdraw
    <set>
     <if test="id != null" >  id = #{id}, </if><if test="userId != null" >  user_id = #{userId}, </if><if test="channelId != null" >  channel_id = #{channelId}, </if><if test="batchId != null" >  batch_id = #{batchId}, </if><if test="transNo != null" >  trans_no = #{transNo}, </if><if test="transAmt != null" >  trans_amt = #{transAmt}, </if><if test="state != null" >  state = #{state}, </if><if test="returnCode != null" >  return_code = #{returnCode}, </if><if test="returnMsg != null" >  return_msg = #{returnMsg}, </if><if test="createDt != null" >  create_dt = #{createDt}, </if><if test="modifiedTs != null" >  modified_ts = #{modifiedTs}, </if>
      </set>
	  WHERE id = #{id}
	</update>
	
	
	<delete id="delete" parameterType="java.util.HashMap">
		DELETE FROM dr_pay_user_withdraw 
		<include refid="Example_Where_Delete" />
	</delete>
	
	<delete id="deleteAll" parameterType="java.util.List">
		DELETE FROM dr_pay_user_withdraw 
		WHERE id IN
		<foreach collection="list" item="id" separator="," open="(" close=")">
			#{id}
		</foreach>
	</delete>
</mapper>